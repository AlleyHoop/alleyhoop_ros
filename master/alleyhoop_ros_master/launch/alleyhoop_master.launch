<launch>
    <!--launch args-->
    <arg name="enable_traffic_rules_feature_finder" default="false"/>
    <arg name="enable_object_feature_finder" default="false"/>
    <arg name="enable_road_feature_finder" default="false"/>
    <arg name="enable_arduino_slave" default="false"/>
    <arg name="enable_pi_camera" default="false"/>
    <arg name="enable_fake_pi_camera" default="false"/>
    <arg name="enable_fake_depth_camera" default="false"/>

    <!--launch slave communication-->
    <group if="$(arg enable_arduino_slave)">
        <node name="arduino_slave" pkg="rosserial_python" type="serial_node.py" args="/dev/ttyACM0" output="screen"/>
    </group>

    <!--launch pi camera-->
    <group if="$(arg enable_pi_camera)">
        <node name="pi_camera" pkg="raspi_utils" type="raspi_camera.py" output="screen"/>
    </group>

    <!--launch fake pi camera-->
    <group if="$(arg enable_fake_pi_camera)">
        <node name="fake_pi_camera" pkg="raspi_utils" type="fake_raspi_camera.py" args="image=traffic_sign.jpeg topic=/raspi_camera/image_raw" output="screen" cwd="node"/>
    </group>

    <!--launch fake pi camera-->
    <group if="$(arg enable_fake_depth_camera)">
        <node name="fake_depth_camera" pkg="raspi_utils" type="fake_raspi_camera.py" args="image=highway.jpg topic=/depth_camera/image_raw" output="screen" cwd="node"/>
    </group>

    <!--launch feature finder-->
    <group if="$(arg enable_traffic_rules_feature_finder)">
        <node name="traffic_rules_feature_finder" pkg="traffic_rules_feature_finder" type="traffic_rules_feature_finder_server" output="screen"/>
    </group>

    <!--launch feature finder-->
    <group if="$(arg enable_object_feature_finder)">
        <include file="$(find object_feature_finder)/launch/nodes.launch">
               <arg name="image_topic" value="/depth_camera/image_raw" /> 
        </include>
    </group>

    <!--launch feature finder-->
    <group if="$(arg enable_road_feature_finder)">
        <node name="road_feature_finder" pkg="road_feature_finder" type="road_feature_finder_server" output="screen"/>
    </group>

    <!-- load parameters-->
    <rosparam file="$(find alleyhoop_ros_master)/config/alleyhoop_device_configuration.yaml" />

    <!--launch core node-->
    <node name="alleyhoop_ros_master" pkg="alleyhoop_ros_master" type="alleyhoop_ros_node" output="screen"/>
    
</launch>